diff --git a/admin-dev/themes/default/scss/partials/_forms.scss b/admin-dev/themes/default/scss/partials/_forms.scss
index 5babde1a0f328..e35ceaa503201 100644
--- a/admin-dev/themes/default/scss/partials/_forms.scss
+++ b/admin-dev/themes/default/scss/partials/_forms.scss
@@ -330,3 +330,16 @@ input[type="tel"] {
     }
   }
 }
+
+.modal-checkbox {
+  input {
+    margin: 0;
+    margin-right: 5px;
+    vertical-align: middle;
+  }
+
+  label {
+    margin-bottom: 0;
+    vertical-align: middle;
+  }
+}
diff --git a/admin-dev/themes/default/template/controllers/images/content.tpl b/admin-dev/themes/default/template/controllers/images/content.tpl
index a1f9da15e7a8f..374169b9bb25d 100644
--- a/admin-dev/themes/default/template/controllers/images/content.tpl
+++ b/admin-dev/themes/default/template/controllers/images/content.tpl
@@ -144,6 +144,13 @@
       $('.btn-regenerate-thumbnails').on('click', function () {
         $('#display_regenerate_form').trigger('submit');
       });
+      $('.btn-confirm-delete-images-type').on('click', function () {
+        document.location = $(this).attr('data-confirm-url') + '&delete_linked_images=' + $('#delete_linked_images').is(":checked");
+      });
+
+      $('#modalConfirmDeleteType ').on('hidden.bs.modal', function () {
+        $('.modal-checkbox input', this).prop('checked', false)
+      });
     });
   </script>
 {/if}
diff --git a/admin-dev/themes/default/template/controllers/images/helpers/list/list_action_delete.tpl b/admin-dev/themes/default/template/controllers/images/helpers/list/list_action_delete.tpl
new file mode 100644
index 0000000000000..e883ee64fcd6e
--- /dev/null
+++ b/admin-dev/themes/default/template/controllers/images/helpers/list/list_action_delete.tpl
@@ -0,0 +1,38 @@
+{**
+ * Copyright since 2007 PrestaShop SA and Contributors
+ * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
+ *
+ * NOTICE OF LICENSE
+ *
+ * This source file is subject to the Open Software License (OSL 3.0)
+ * that is bundled with this package in the file LICENSE.md.
+ * It is also available through the world-wide-web at this URL:
+ * https://opensource.org/licenses/OSL-3.0
+ * If you did not receive a copy of the license and are unable to
+ * obtain it through the world-wide-web, please send an email
+ * to license@prestashop.com so we can send you a copy immediately.
+ *
+ * DISCLAIMER
+ *
+ * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
+ * versions in the future. If you wish to customize PrestaShop for your
+ * needs please refer to https://devdocs.prestashop.com/ for more information.
+ *
+ * @author    PrestaShop SA and Contributors <contact@prestashop.com>
+ * @copyright Since 2007 PrestaShop SA and Contributors
+ * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
+ *}
+ <a href="#"
+ title="{$action|escape:'html':'UTF-8'}"
+ class="delete"
+ onclick="
+  {if $confirm}
+    var modalConfirmDeleteType = $('#modalConfirmDeleteType');
+    $('.btn-confirm-delete-images-type', modalConfirmDeleteType).attr('data-confirm-url', '{$href|escape:'html':'UTF-8'}');
+    modalConfirmDeleteType.modal('show');
+  {else}
+    event.stopPropagation();event.preventDefault()
+  {/if}
+">
+<i class="icon-trash"></i> {$action|escape:'html':'UTF-8'}
+</a>
diff --git a/admin-dev/themes/default/template/controllers/images/modal_confirm_delete_type.tpl b/admin-dev/themes/default/template/controllers/images/modal_confirm_delete_type.tpl
new file mode 100644
index 0000000000000..c0e92bdc061fb
--- /dev/null
+++ b/admin-dev/themes/default/template/controllers/images/modal_confirm_delete_type.tpl
@@ -0,0 +1,37 @@
+{**
+ * Copyright since 2007 PrestaShop SA and Contributors
+ * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
+ *
+ * NOTICE OF LICENSE
+ *
+ * This source file is subject to the Open Software License (OSL 3.0)
+ * that is bundled with this package in the file LICENSE.md.
+ * It is also available through the world-wide-web at this URL:
+ * https://opensource.org/licenses/OSL-3.0
+ * If you did not receive a copy of the license and are unable to
+ * obtain it through the world-wide-web, please send an email
+ * to license@prestashop.com so we can send you a copy immediately.
+ *
+ * DISCLAIMER
+ *
+ * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
+ * versions in the future. If you wish to customize PrestaShop for your
+ * needs please refer to https://devdocs.prestashop.com/ for more information.
+ *
+ * @author    PrestaShop SA and Contributors <contact@prestashop.com>
+ * @copyright Since 2007 PrestaShop SA and Contributors
+ * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
+ *}
+<div class="modal-body">
+  <div class="form-group">
+    {l
+      s="By deleting this image format, the theme will not be able to use it. This will result in a degraded experience on your front office."
+      d="Admin.Design.Notification"
+    }
+  </div>
+
+  <div class="modal-checkbox">
+    <input type="checkbox" id="delete_linked_images" name="delete">
+    <label for="delete_linked_images">{l s="Delete the images linked to this image setting" d="Admin.Design.Notification"}</label>
+  </div>
+</div>
diff --git a/classes/ImageType.php b/classes/ImageType.php
index 377a1ee808a41..f3e9e9a80aa0c 100644
--- a/classes/ImageType.php
+++ b/classes/ImageType.php
@@ -112,6 +112,20 @@ public static function getImagesTypes($type = null, $orderBySize = false)
         return self::$images_types_cache[$type];
     }

+    /**
+     * Returns image type by id.
+     *
+     * @param int $id id
+     *
+     * @return array Image type definitions
+     *
+     * @throws PrestaShopDatabaseException
+     */
+    public static function getImageTypeById(int $id): array
+    {
+        return Db::getInstance()->getRow('SELECT * FROM `' . _DB_PREFIX_ . 'image_type` WHERE `id_image_type` = ' . $id);
+    }
+
     /**
      * Check if type already is already registered in database.
      *
diff --git a/controllers/admin/AdminImagesController.php b/controllers/admin/AdminImagesController.php
index 4e645d18248b0..0ae5f0851bbed 100644
--- a/controllers/admin/AdminImagesController.php
+++ b/controllers/admin/AdminImagesController.php
@@ -375,6 +375,22 @@ public function initModal(): void
                 ],
             ],
         ];
+
+        $this->modals[] = [
+            'modal_id' => 'modalConfirmDeleteType',
+            'modal_class' => 'modal-md',
+            'modal_title' => $this->trans('Are you sure you want to delete this image setting?', [], 'Admin.Design.Feature'),
+            'modal_content' => $this->context->smarty->fetch('controllers/images/modal_confirm_delete_type.tpl'),
+            'modal_cancel_label' => $this->trans('Cancel', [], 'Admin.Actions'),
+            'modal_actions' => [
+                [
+                    'type' => 'button',
+                    'label' => $this->trans('Delete', [], 'Admin.Actions'),
+                    'class' => 'btn-danger btn-confirm-delete-images-type',
+                    'value' => '',
+                ],
+            ],
+        ];
     }

     public function postProcess()
@@ -484,8 +500,12 @@ protected function _deleteOldImages($dir, $type, $product = false)
         foreach ($toDel as $d) {
             foreach ($type as $imageType) {
                 if (preg_match('/^[0-9]+\-' . ($product ? '[0-9]+\-' : '') . $imageType['name'] . '(|2x)\.jpg$/', $d)
+                    || preg_match('/^[0-9]+\-' . ($product ? '[0-9]+\-' : '') . $imageType['name'] . '(|2x)\.avif$/', $d)
+                    || preg_match('/^[0-9]+\-' . ($product ? '[0-9]+\-' : '') . $imageType['name'] . '(|2x)\.webp$/', $d)
                     || (count($type) > 1 && preg_match('/^[0-9]+\-[_a-zA-Z0-9-]*\.jpg$/', $d))
-                    || preg_match('/^([[:lower:]]{2})\-default\-' . $imageType['name'] . '(|2x)\.jpg$/', $d)) {
+                    || preg_match('/^([[:lower:]]{2})\-default\-' . $imageType['name'] . '(|2x)\.jpg$/', $d)
+                    || preg_match('/^([[:lower:]]{2})\-default\-' . $imageType['name'] . '(|2x)\.avif$/', $d)
+                    || preg_match('/^([[:lower:]]{2})\-default\-' . $imageType['name'] . '(|2x)\.webp$/', $d)) {
                     if (file_exists($dir . $d)) {
                         unlink($dir . $d);
                     }
@@ -503,7 +523,12 @@ protected function _deleteOldImages($dir, $type, $product = false)
                     $toDel = scandir($dir . $imageObj->getImgFolder(), SCANDIR_SORT_NONE);
                     foreach ($toDel as $d) {
                         foreach ($type as $imageType) {
-                            if (preg_match('/^[0-9]+\-' . $imageType['name'] . '(|2x)\.jpg$/', $d) || (count($type) > 1 && preg_match('/^[0-9]+\-[_a-zA-Z0-9-]*\.jpg$/', $d))) {
+                            if (preg_match('/^[0-9]+\-' . $imageType['name'] . '(|2x)\.jpg$/', $d)
+                                || preg_match('/^[0-9]+\-' . $imageType['name'] . '(|2x)\.avif$/', $d)
+                                || preg_match('/^[0-9]+\-' . $imageType['name'] . '(|2x)\.webp$/', $d)
+                                || (count($type) > 1 && preg_match('/^[0-9]+\-[_a-zA-Z0-9-]*\.jpg$/', $d))
+                                || (count($type) > 1 && preg_match('/^[0-9]+\-[_a-zA-Z0-9-]*\.avif$/', $d))
+                                || (count($type) > 1 && preg_match('/^[0-9]+\-[_a-zA-Z0-9-]*\.webp$/', $d))) {
                                 if (file_exists($dir . $imageObj->getImgFolder() . $d)) {
                                     unlink($dir . $imageObj->getImgFolder() . $d);
                                 }
@@ -805,4 +830,32 @@ public function initContent()

         parent::initContent();
     }
+
+    public function processDelete()
+    {
+        $imageType = ImageType::getImageTypeById((int) Tools::getValue('id_image_type'));
+
+        // We will remove the images linked to this image setting
+        if (Tools::getValue('delete_linked_images', 0) === 'true') {
+            $imageDirectoriesByEntity = [
+                ['type' => 'categories', 'dir' => _PS_CAT_IMG_DIR_],
+                ['type' => 'manufacturers', 'dir' => _PS_MANU_IMG_DIR_],
+                ['type' => 'suppliers', 'dir' => _PS_SUPP_IMG_DIR_],
+                ['type' => 'products', 'dir' => _PS_PRODUCT_IMG_DIR_],
+                ['type' => 'stores', 'dir' => _PS_STORE_IMG_DIR_],
+            ];
+            foreach ($imageDirectoriesByEntity as $imagesDirectory) {
+                $allFormats = ImageType::getImagesTypes($imagesDirectory['type']);
+                $nameToFilter = $imageType['name'];
+
+                $formats = array_filter($allFormats, function ($element) use ($nameToFilter) {
+                    return $element['name'] == $nameToFilter;
+                });
+
+                $this->_deleteOldImages($imagesDirectory['dir'], $formats, ($imagesDirectory['type'] == 'products' ? true : false));
+            }
+        }
+
+        return parent::processDelete();
+    }
 }
